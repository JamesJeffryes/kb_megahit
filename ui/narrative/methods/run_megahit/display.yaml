#
# define display information
#
name: Assemble Reads with MEGAHIT v1.1.1
tooltip: Assemble metagenomic reads using the MEGAHIT assembler.
screenshots: []

icon: megahit-blue.png

#
# define a set of similar methods that might be useful to the user
#
suggestions:
	apps:
		related:
			[]
		next:
			[]
	methods:
		related:
			[]
		next:
			[]

#
# Configure the display and description of parameters
#
parameters :
    read_library_ref :
        ui-name : Read Library
        short-hint : Read library (only PairedEnd Libs supported now)
    output_contigset_name:
        ui-name : Output Assembly name
        short-hint : Enter a name for the assembled contigs data object
    megahit_parameter_preset:
        ui-name : Parameter preset
        short-hint : Select a MEGAHIT parameter preset
        description : |
            This option overrides a group of parameters.
            meta-sensitive  '--min-count 1 --k-list 21,29,39,49,...,129,141'
            meta-large      '--k-min 27 --k-max 127 --k-step 10'
    min_count:
        ui-name : '--min-count'
        short-hint : 'minimum multiplicity for filtering (k_min+1)-mers, default 2'
    k_min:
        ui-name : '--k-min'
        short-hint : 'minimum kmer size (<= 127), must be odd number, default 21'
    k_max:
        ui-name : '--k-max'
        short-hint : 'maximum kmer size (<= 255), must be odd number, default 141'
    k_step:
        ui-name : '--k-step'
        short-hint : 'increment of kmer size of each iteration (<= 28), must be even number, default 12'
    k_list:
        ui-name : '--k-list'
        short-hint : 'list of kmer size (all must be odd, in the range 15-255, increment <= 28)'
    min_contig_length:
        ui-name : '--min-contig-len'
        short-hint : 'minimum length of contigs to output'


description : |
    <p>This is a KBase wrapper for MEGAHIT.</p>
    <p>MEGAHIT is a single node assembler for large and complex metagenomics NGS reads, such as soil.
    It makes use of succinct de Bruijn graph (SdBG) to achieve low memory assembly.</p>

    <p>User feedback has led to the following observations about the current version of MEGAHIT input parameters:</p>
    <ul>
    <li>MEGAHIT makes decision about the order in which optional parameters are implemented. If k-min, k-max, and k-step are
    all three left blank, the k-list of [21,29,39,59,79,99,119,141] is used. This list is different than the one generated by using
    the default values k-min, k-max, and k-step</li>
    <li>If any of the k-min, k-max, or k-step are specified, then the default values will be used for the remaining parameter(s).</li>
    <li>The documentation claims that the default k-step is 12. In practice, it is set to 10.</li>
    <li>The k-max will be reset if the k-max is greater than the longest read length + 20. If this results in an
    even number, the k-max will be reset to the longest read length + 19.</li>
    <li>It is possible to set parameters so extreme that MEGAHIT ends with an ungraceful error. </li>
    <ul>
      <li>If the k-min is larger than the longest read, there are no reads to assemble and MEGAHIT ends in an error.</li>
      <li>If the k-min is set high, there may be very few reads to assemble. In these cases, it is possible to set min_count
       at a value that has no assembled contigs and MEGAHIT ends with an ungraceful error.</li>
      <li>If the k-min is set high, there may be very few reads to assemble. If contigs do get assembled but none pass the
      min_contig_length filter, MEGAHIT will end cleanly but have no contigs.</li>
    </ul>
    </ul>

publications :
    -
        pmid: 25609793
        display-text : |
            Li D, Liu C-M, Luo R, Sadakane K, Lam T-W. MEGAHIT: an ultra-fast single-node solution for large and complex metagenomics assembly via succinct de Bruijn graph. Bioinformatics. 2015;31: 1674â€“1676. doi:10.1093/bioinformatics/btv033
        link: http://www.ncbi.nlm.nih.gov/pubmed/25609793
